// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @db.Uuid /// @format uuid
  email     String     @unique
  nickname  String
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")
  deletedAt DateTime?  @map("deleted_at")
  devices   Device[]
  drive     Drive?
  shortcuts Shortcuts?
}

model Drive {
  id           String      @id @db.Uuid /// @format uuid
  userId       String      @unique @map("user_id") @db.Uuid /// @format uuid
  baseFolderId String      @map("base_folder_id")
  textFolderId String      @map("text_folder_id")
  fileFolderId String      @map("file_folder_id")
  createdAt    DateTime    @default(now()) @map("created_at")
  updatedAt    DateTime    @updatedAt @map("updated_at")
  deletedAt    DateTime?   @map("deleted_at")
  user         User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  driveFile    DriveFile[]
}

model DriveFile {
  id          String       @id @db.Uuid /// @format uuid
  driveId     String       @map("drive_id") @db.Uuid /// @format uuid
  driveFileId String       @map("drive_file_id")
  fileType    String       @map("file_type")
  folderId    String       @map("folder_id")
  stored      Boolean      @default(false)
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  deletedAt   DateTime?    @map("deleted_at")
  drive       Drive        @relation(fields: [driveId], references: [id], onDelete: Cascade)
  storedFiles StoredFile[]

  @@index([createdAt])
}

model StoredFile {
  id        String    @id @db.Uuid /// @format uuid
  fileId    String    @map("file_id") @db.Uuid /// @format uuid
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
  file      DriveFile @relation(fields: [fileId], references: [id], onDelete: Cascade)

  @@index([createdAt])
}

model Device {
  id         String     @id @db.Uuid /// @format uuid
  userId     String     @map("user_id") @db.Uuid /// @format uuid
  mac        String     @unique
  alias      String
  deviceType DeviceType @map("device_type")
  fcmToken   String     @map("fcm_token")
  createdAt  DateTime   @default(now()) @map("created_at")
  updatedAt  DateTime   @updatedAt @map("updated_at")
  deletedAt  DateTime?  @map("deleted_at")
  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum DeviceType {
  PC     @map("pc")
  MOBILE @map("mobile")
}

model Shortcuts {
  id        String    @id @db.Uuid /// @format uuid
  userId    String    @unique @map("user_id") @db.Uuid /// @format uuid
  shortcuts Json
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}
